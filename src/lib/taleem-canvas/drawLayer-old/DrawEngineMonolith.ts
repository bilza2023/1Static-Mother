/**
 * 25-Mar-2025 ==> Everything is final and Every thing is complete.
 * - This engine takes in item-literals and draw them, does not know about any other object (Edit Object).Also there is no DrawObject just item-literals and draw-functions.
 * - The Env is generated by the DrawEngineMonolith
 * - The assets should come with images loaded.
 * - 26-March-2025:This is purely drawEngine (object) now with no mouse eventhandlers.
 */
import {IAssets} from "../../assets/IAssets.js"; //Global App level Interface
import {IBackground} from "../dataLayer/IBackground.js";//local Moduel index
import {ICanvasItemTypes} from "../dataLayer/ICanvasItems.js";//local Moduel index

import DrawFunctionsMap from "./DrawFunctionsMap.js";
import DrawCtx from "../core/DrawCtx.js"; //just the ctx related methods
import drawBg from "./drawBg.js"; //seperate
/////////////////////////////////////////////////////////////////
export default class DrawEngineMonolith  {
canvas:HTMLCanvasElement;
ctx:CanvasRenderingContext2D;
drawCtx:DrawCtx; //Rename it to Renderer (this is only obj that holds CTX)
bgData:IBackground;
width:number;
height:number;
assets:IAssets;//assets with images
///////////////////////////////////////////////////////////////
  constructor(canvas :HTMLCanvasElement, ctx:CanvasRenderingContext2D,assets:IAssets) { 
    if (!canvas || !ctx) {console.error("TaleemCanvas requires both a canvas element and a 2D rendering context.");throw new Error("TaleemCanvas requires both `canvas` and `ctx`.");    }
    this.canvas = canvas;
    this.drawCtx = new DrawCtx(ctx,canvas);
    this.assets = assets;//These assets include "images" loaded
    this.width = 1000;this.height = 360;this.canvas.width = this.width;this.canvas.height = this.height;
  }
  draw(items:ICanvasItemTypes[],background:IBackground) {
    this.drawCtx.clear();
    drawBg(this.ctx,background,this.drawCtx,this.assets);
    items.forEach(item => {
      const drawFunction = DrawFunctionsMap.get(item.type);
      if (typeof drawFunction === 'function') {
        this.ctx.save();//dont remove
/**
 * when ever i have time i will change the draw singature of drawFunction. it should be
 *  replace ctx and Env with drawCtx
 *      drawFunction(item,this.drawCtx,this.assets);//I-D-A (Items,DrawCtx,Assets)
 * DONE 26March 2025
 */
        drawFunction(item,this.drawCtx,this.assets); //I-D-A (Items,DrawCtx,Assets)
        this.ctx.restore();//dont remove
      }
    });
  }
///////////////////////------Util--//////////////

}
